<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
		Main Handlebars grammar.
		We do it this way so that we can inject Handlebars syntax into certain
		scopes without also injecting HTML syntax into those scopes. Consider a
		STYLE block, for instance: within it, we should highlight CSS and
		Handlebars, but _not_ HTML, because arbitrary HTML isn’t valid in that
		context.
		
		Also, we inject a very lightweight grammar into HTML attribute strings so
		that we can spot Handlebars directives inside them. We could go overboard
		and implement the entire grammar in here, but we don’t want full syntax
		highlighting — just something subtle that won’t make the string too loud.
	</string>
	<key>fileTypes</key>
	<array>
		<string>handlebars</string>
		<string>hbs</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(?x)
		(&lt;(?i:head|body|table|thead|tbody|tfoot|tr|div|select|fieldset|style|script|ul|ol|form|dl)\b.*?&gt;
		|&lt;!--(?!.*--&gt;)
		|\{\s*($|\?&gt;\s*$|//|/\*(.*\*/\s*$|(?!.*?\*/)))
		|\{\{\#
		)</string>
	<key>foldingStopMarker</key>
	<string>(?x)
		(&lt;/(?i:head|body|table|thead|tbody|tfoot|tr|div|select|fieldset|style|script|ul|ol|form|dl)&gt;
		|^\s*--&gt;
		|(^|\s)\}
		|\{\{/
		)</string>
	<key>injections</key>
	<dict>
		<key>source.css.embedded.html - comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.handlebars</string>
				</dict>
			</array>
		</dict>
		<key>source.js.embedded.html - comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.handlebars</string>
				</dict>
			</array>
		</dict>
		<key>string.quoted.double.html</key>
		<dict>
			<key>comment</key>
			<string>
				These two need to be treated differently because single quotes can’t go
				inside a single-quoted HTML string, and double quotes can’t go inside a
				double-quoted HTML string.
				
				If we didn’t do this, we’d be able to put double quotes inside double
				quotes and have it “look” right. It’s syntactically invalid, so it should
				look incorrect.
			</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#embedded-in-double-quotes</string>
				</dict>
			</array>
		</dict>
		<key>string.quoted.single.html</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#embedded-in-single-quotes</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>keyEquivalent</key>
	<string>^~H</string>
	<key>name</key>
	<string>HTML (Handlebars)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>source.handlebars</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.html.basic</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>embedded-in-double-quotes</key>
		<dict>
			<key>comment</key>
			<string>
				Allows anything between double braces except for a double quote.
			</string>
			<key>match</key>
			<string>\{\{[^"]*?\}\}</string>
			<key>name</key>
			<string>meta.embedded.directive.handlebars</string>
		</dict>
		<key>embedded-in-single-quotes</key>
		<dict>
			<key>comment</key>
			<string>
				Allows anything between double braces except for a single quote.
			</string>
			<key>match</key>
			<string>\{\{[A-Za-z0-9"\s\.\/]*?\}\}</string>
			<key>name</key>
			<string>meta.embedded.directive.handlebars</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.html.handlebars</string>
	<key>uuid</key>
	<string>70E91676-DE0A-4266-A2B9-3AD2E535E484</string>
</dict>
</plist>
