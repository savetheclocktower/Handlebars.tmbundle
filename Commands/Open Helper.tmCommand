<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

# Attempts to open the helper whose name is under the cursor. For instance,
# if you've got...
#
#     {{prune text 30}}
#
# ...then you can put the cursor anywhere in the word "prune", hit ENTER
# (fn + return on laptop keyboards), and have that file open in
# TextMate.
# 
# This makes several assumptions:
# 
# 1. each of your helpers is defined in its own individual file;
# 2. the name of the file matches the name of the helper;
# 3. you've defined TM_HANDLEBARS_HELPERS_GLOB so that this command knows
#    where to look for helpers.
# 
# If #1 or #2 is impossible, pretend this command never existed.
# 
require 'pathname'
require "#{ENV['TM_SUPPORT_PATH']}/lib/textmate"
require "#{ENV['TM_SUPPORT_PATH']}/lib/exit_codes"

unless ENV.key?('TM_HANDLEBARS_HELPERS_GLOB')
  TextMate::exit_show_tool_tip(%Q{You must define TM_HANDLEBARS_HELPERS_GLOB in your .tm_properties file.})
end

paths  = Pathname::glob(ENV['TM_HANDLEBARS_HELPERS_GLOB'])
name   = STDIN.read.sub(/^(?:#|\/)/, '')
target = paths.detect { |p| p.basename.to_s.start_with?("#{name}.") &amp;&amp; p.file? }

if target
  TextMate::go_to(:file =&gt; target)
else
  msg =  "Canâ€™t find file named: #{name}\n"
  msg &lt;&lt; "(Check your TM_HANDLEBARS_HELPERS_GLOB variable.)"
  TextMate::exit_show_tool_tip(msg)
end
</string>
	<key>input</key>
	<string>scope</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string></string>
	<key>name</key>
	<string>Open Helper</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>toolTip</string>
	<key>scope</key>
	<string>entity.name.tag.inline.any.handlebars</string>
	<key>uuid</key>
	<string>839C262D-65D7-49F7-B803-465DA55742EB</string>
	<key>version</key>
	<string>2</string>
</dict>
</plist>
